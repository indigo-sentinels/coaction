{"version":3,"sources":["app.js","users/user-controller.js","users/user.js","users/users-service.js","tasks/task-controller.js","tasks/task.js","tasks/tasks-controller.js","tasks/tasks-service.js","errors/404/error-404-controller.js","tasks/comments/comment.js","tasks/todos/todo.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;ACAA;ACAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'users/user.html',\n    controller: 'UserCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      user: ['usersService', '$route', function (usersService, $route) {\n        var routeParams = $route.current.params;\n        var id = routeParams.id;\n        console.log(id);\n        return usersService.viewUser(id);\n      }]\n    }\n  };\n\n  $routeProvider.when('/users/:id', routeDefinition);\n}])\n.controller('UserCtrl', ['user', function (user) {\n  var self = this;\n  self.user = user;\n}]);\n","app.factory('User', function() {\n  return function (spec) {\n    spec: spec || {};\n    return {\n      userId: spec.userId || '',\n      username: spec.username || '',\n      password: spec.password || '',\n      email: spec.email || ''\n    };\n  };\n});\n","","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'tasks/task.html',\n    controller: 'TaskCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      task: ['tasksService', '$route', function (tasksService, $route) {\n        var routeParams = $route.current.params;\n        var id = routeParams.id;\n        return tasksService.viewTask(id);\n      }]\n    }\n  };\n\n  $routeProvider.when('/tasks/:id', routeDefinition);\n}])\n.controller('TaskCtrl', ['task', function (task) {\n  var self = this;\n  self.task = task;\n}]);\n","app.factory('Task', function() {\n  return function (spec) {\n    spec: spec || {};\n    return {\n      title: spec.title || '',\n      userId: spec.userId || '',\n      taskId: spec.taskId || '',\n      timestamp: spec.timestamp || '',\n      assignedIds: spec.assignedIds || [],\n      status: spec.status || '',\n      description: spec.description || '',\n      comments: spec.comments || [],\n      dueDate: spec.dueDate || '',\n      todos: spec.todos || []\n    };\n  };\n});\n","","","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n","app.factory('Comment', function() {\n  return function (spec) {\n    spec: spec || {};\n    return {\n      commentId: spec.commentId || '',\n      taskId: spec.taskId || '',\n      userId: spec.userId || '',\n      text: spec.text || ''\n    };\n  };\n});\n","app.factory('Todo', function() {\n  return function (spec) {\n    spec: spec || {};\n    return {\n      todoId: spec.todoId || '',\n      taskId: spec.taskId || '',\n      userId: spec.userId || '',\n      text: spec.text || ''\n    };\n  };\n});\n"],"sourceRoot":"/source/"}