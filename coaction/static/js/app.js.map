{"version":3,"sources":["app.js","tasks/new-task-controller.js","tasks/task-controller.js","tasks/task.js","tasks/tasks-controller.js","tasks/tasks-service.js","users/new-user-controller.js","users/user-controller.js","users/user.js","users/users-service.js","errors/404/error-404-controller.js","tasks/comments/comment.js","tasks/todos/todo.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/tasks/new-task.html',\n    controller: 'NewTaskCtrl',\n    controllerAs: 'vm'\n  };\n\n  $routeProvider.when('/tasks/new', routeDefinition);\n}])\n.controller('NewTaskCtrl', ['tasksService', 'Task', '$window', function (tasksService, Task, $window) {\n  var self = this;\n  self.task = Task();\n\n  self.addTask = function() {\n    tasksService.addTask(self.task);\n\n    self.task = Task();\n\n    // $window.location.href= \"#/shares\"; TODO\n  };\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'tasks/task.html',\n    controller: 'TaskCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      task: ['tasksService', '$route', function (tasksService, $route) {\n        var routeParams = $route.current.params;\n        var id = routeParams.id;\n        return tasksService.viewTask(id);\n      }]\n    }\n  };\n\n  $routeProvider.when('/tasks/:id', routeDefinition);\n}])\n.controller('TaskCtrl', ['task', function (task) {\n  var self = this;\n  self.task = task;\n}]);\n","app.factory('Task', function() {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      title: spec.title || '',\n      userId: spec.userId || '',\n      taskId: spec.taskId || '',\n      timestamp: spec.timestamp || '',\n      assignedIds: spec.assignedIds || [],\n      status: spec.status || '',\n      description: spec.description || '',\n      comments: spec.comments || [],\n      dueDate: spec.dueDate || '',\n      todos: spec.todos || [],\n      orderId: spec.orderId || ''\n    };\n  };\n});\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/tasks/tasks.html',\n    controller: 'TasksCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      tasks: ['tasksService', function (tasksService) {\n        return tasksService.list();\n      }]\n    }\n  };\n\n  $routeProvider.when('/', routeDefinition);\n  $routeProvider.when('/tasks', routeDefinition);\n}])\n.controller('TasksCtrl', ['tasks', function (tasks) {\n  var self = this;\n  self.tasks = tasks;\n}]);\n","app.factory('tasksService', ['$http', function($http) {\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      return result.data.tasks;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n    list: function () {\n      return get('/api/tasks');\n    },\n\n    viewTask: function (id) {\n      return get('/api/tasks/' + id);\n    },\n\n    addTask: function(task) {\n      return processAjaxPromise($http.post('/api/tasks', task));\n    },\n\n    deleteTask: function(task) {\n      return processAjaxPromise($http.delete('/api/tasks', task));\n    }\n  };\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/users/new-user.html',\n    controller: 'NewUserCtrl',\n    controllerAs: 'vm'\n  };\n\n  $routeProvider.when('/users/new', routeDefinition);\n}])\n.controller('NewUserCtrl', ['usersService', 'User', '$window', function (usersService, User, $window) {\n  var self = this;\n  self.user = User();\n\n  self.addUser = function() {\n    usersService.addUser(self.user);\n\n    self.user = User();\n\n    // $window.location.href= \"#/shares\"; TODO\n  };\n}]);\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/users/user.html',\n    controller: 'UserCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      user: ['usersService', '$route', function (usersService, $route) {\n        var routeParams = $route.current.params;\n        var id = routeParams.id;\n        console.log(id);\n        return usersService.viewUser(id);\n      }]\n    }\n  };\n\n  $routeProvider.when('/users/:id', routeDefinition);\n}])\n.controller('UserCtrl', ['user', function (user) {\n  var self = this;\n  self.user = user;\n}]);\n","app.factory('User', function() {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      userId: spec.userId || '',\n      username: spec.username || '',\n      password: spec.password || '',\n      email: spec.email || ''\n    };\n  };\n});\n","app.factory('usersService', ['$http', function($http) {\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      return result.data;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n    list: function () {\n      return get('/api/users');\n    },\n\n    viewUser: function (id) {\n      return get('/api/users/' + id);\n    },\n\n    addUser: function(user) {\n      return processAjaxPromise($http.post('/api/users', user));\n    },\n\n    deleteUser: function(user) {\n      return processAjaxPromise($http.delete('/api/users', user));\n    }\n  };\n}]);\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n","app.factory('Comment', function() {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      commentId: spec.commentId || '',\n      taskId: spec.taskId || '',\n      userId: spec.userId || '',\n      text: spec.text || ''\n    };\n  };\n});\n","app.factory('Todo', function() {\n  return function (spec) {\n    spec = spec || {};\n    return {\n      todoId: spec.todoId || '',\n      taskId: spec.taskId || '',\n      userId: spec.userId || '',\n      text: spec.text || ''\n    };\n  };\n});\n"],"sourceRoot":"/source/"}